
/* Do not modify this file it was automatically generated by the
 * TokenList2DsnLexer CMake script.
 *
 * Include this file in your lexer class to provide the keywords for
 * your DSN lexer.
 */

#include </opt/kicad/program/master/Tears_Master/build/common/lib_table_lexer.h>

using namespace LIB_TABLE_T;

#define TOKDEF(x)    { #x, T_##x }

const KEYWORD LIB_TABLE_LEXER::keywords[] = {
    TOKDEF( descr ),
    TOKDEF( design_block_lib_table ),
    TOKDEF( disabled ),
    TOKDEF( fp_lib_table ),
    TOKDEF( hidden ),
    TOKDEF( lib ),
    TOKDEF( name ),
    TOKDEF( options ),
    TOKDEF( sym_lib_table ),
    TOKDEF( type ),
    TOKDEF( uri ),
    TOKDEF( version )
};

const unsigned LIB_TABLE_LEXER::keyword_count = unsigned( sizeof( LIB_TABLE_LEXER::keywords )/sizeof( LIB_TABLE_LEXER::keywords[0] ) );


const char* LIB_TABLE_LEXER::TokenName( T aTok )
{
    const char* ret;

    if( aTok < 0 )
        ret = DSNLEXER::Syntax( aTok );
    else if( (unsigned) aTok < keyword_count )
        ret = keywords[aTok].name;
    else
        ret = "token too big";

    return ret;
}


const KEYWORD_MAP LIB_TABLE_LEXER::keywords_hash({
    { "descr", 0 },
    { "design_block_lib_table", 1 },
    { "disabled", 2 },
    { "fp_lib_table", 3 },
    { "hidden", 4 },
    { "lib", 5 },
    { "name", 6 },
    { "options", 7 },
    { "sym_lib_table", 8 },
    { "type", 9 },
    { "uri", 10 },
    { "version", 11 }
});