
/* Do not modify this file it was automatically generated by the
 * TokenList2DsnLexer CMake script.
 *
 * Include this file in your lexer class to provide the keywords for
 * your DSN lexer.
 */

#include </opt/kicad/program/master/Tears_Master/build/common/pcb_lexer.h>

using namespace PCB_KEYS_T;

#define TOKDEF(x)    { #x, T_##x }

const KEYWORD PCB_LEXER::keywords[] = {
    TOKDEF( add_net ),
    TOKDEF( addsublayer ),
    TOKDEF( aligned ),
    TOKDEF( allow_missing_courtyard ),
    TOKDEF( allow_soldermask_bridges ),
    TOKDEF( allow_soldermask_bridges_in_footprints ),
    TOKDEF( allow_two_segments ),
    TOKDEF( allowed ),
    TOKDEF( anchor ),
    TOKDEF( angle ),
    TOKDEF( arc ),
    TOKDEF( arc_segments ),
    TOKDEF( area ),
    TOKDEF( arrow1a ),
    TOKDEF( arrow1b ),
    TOKDEF( arrow2a ),
    TOKDEF( arrow2b ),
    TOKDEF( arrow_direction ),
    TOKDEF( arrow_length ),
    TOKDEF( at ),
    TOKDEF( attr ),
    TOKDEF( autoplace_cost180 ),
    TOKDEF( autoplace_cost90 ),
    TOKDEF( aux_axis_origin ),
    TOKDEF( back ),
    TOKDEF( best_length_ratio ),
    TOKDEF( best_width_ratio ),
    TOKDEF( bevelled ),
    TOKDEF( blind ),
    TOKDEF( blind_buried_vias_allowed ),
    TOKDEF( board_only ),
    TOKDEF( bold ),
    TOKDEF( border ),
    TOKDEF( bottom ),
    TOKDEF( bottom_left ),
    TOKDEF( bottom_right ),
    TOKDEF( capping ),
    TOKDEF( castellated_pads ),
    TOKDEF( cells ),
    TOKDEF( center ),
    TOKDEF( chamfer ),
    TOKDEF( chamfer_ratio ),
    TOKDEF( checksum ),
    TOKDEF( circle ),
    TOKDEF( class ),
    TOKDEF( clearance ),
    TOKDEF( clearance_min ),
    TOKDEF( color ),
    TOKDEF( cols ),
    TOKDEF( column_count ),
    TOKDEF( column_widths ),
    TOKDEF( comment ),
    TOKDEF( company ),
    TOKDEF( component_class ),
    TOKDEF( component_classes ),
    TOKDEF( connect ),
    TOKDEF( connect_pads ),
    TOKDEF( convexhull ),
    TOKDEF( copper_finish ),
    TOKDEF( copper_line_width ),
    TOKDEF( copper_text_dims ),
    TOKDEF( copperpour ),
    TOKDEF( courtyard_line_width ),
    TOKDEF( covering ),
    TOKDEF( creepage ),
    TOKDEF( cross_hatch ),
    TOKDEF( crossbar ),
    TOKDEF( curve_points ),
    TOKDEF( curved_edges ),
    TOKDEF( custom ),
    TOKDEF( dash ),
    TOKDEF( dash_dot ),
    TOKDEF( dash_dot_dot ),
    TOKDEF( data ),
    TOKDEF( datasheet ),
    TOKDEF( date ),
    TOKDEF( default ),
    TOKDEF( defaults ),
    TOKDEF( descr ),
    TOKDEF( die_length ),
    TOKDEF( dielectric_constraints ),
    TOKDEF( diff_pair_gap ),
    TOKDEF( diff_pair_width ),
    TOKDEF( dimension ),
    TOKDEF( dimension_precision ),
    TOKDEF( dimension_units ),
    TOKDEF( dnp ),
    TOKDEF( dot ),
    TOKDEF( drawings ),
    TOKDEF( drill ),
    TOKDEF( duplicate_pad_numbers_are_jumpers ),
    TOKDEF( edge ),
    TOKDEF( edge_clearance ),
    TOKDEF( edge_connector ),
    TOKDEF( edge_cuts_line_width ),
    TOKDEF( edge_plating ),
    TOKDEF( edge_width ),
    TOKDEF( effects ),
    TOKDEF( embedded_files ),
    TOKDEF( embedded_fonts ),
    TOKDEF( enabled ),
    TOKDEF( end ),
    TOKDEF( epsilon_r ),
    TOKDEF( exclude_from_bom ),
    TOKDEF( exclude_from_pos_files ),
    TOKDEF( extension_height ),
    TOKDEF( extension_offset ),
    TOKDEF( external ),
    TOKDEF( fab_layers_line_width ),
    TOKDEF( fab_layers_text_dims ),
    TOKDEF( face ),
    TOKDEF( false ),
    TOKDEF( feature1 ),
    TOKDEF( feature2 ),
    TOKDEF( file ),
    TOKDEF( fill ),
    TOKDEF( fill_segments ),
    TOKDEF( filled_areas_thickness ),
    TOKDEF( filled_polygon ),
    TOKDEF( fillet ),
    TOKDEF( fillet_auto ),
    TOKDEF( fillet_left ),
    TOKDEF( fillet_right ),
    TOKDEF( filling ),
    TOKDEF( filter_ratio ),
    TOKDEF( font ),
    TOKDEF( footprint ),
    TOKDEF( footprints ),
    TOKDEF( format ),
    TOKDEF( fp_arc ),
    TOKDEF( fp_circle ),
    TOKDEF( fp_curve ),
    TOKDEF( fp_line ),
    TOKDEF( fp_poly ),
    TOKDEF( fp_rect ),
    TOKDEF( fp_text ),
    TOKDEF( fp_text_box ),
    TOKDEF( free ),
    TOKDEF( front ),
    TOKDEF( front_inner_back ),
    TOKDEF( full ),
    TOKDEF( general ),
    TOKDEF( generated ),
    TOKDEF( generator ),
    TOKDEF( generator_version ),
    TOKDEF( gr_arc ),
    TOKDEF( gr_bbox ),
    TOKDEF( gr_circle ),
    TOKDEF( gr_curve ),
    TOKDEF( gr_line ),
    TOKDEF( gr_poly ),
    TOKDEF( gr_rect ),
    TOKDEF( gr_text ),
    TOKDEF( gr_text_box ),
    TOKDEF( gr_vector ),
    TOKDEF( grid_origin ),
    TOKDEF( group ),
    TOKDEF( hatch ),
    TOKDEF( hatch_border_algorithm ),
    TOKDEF( hatch_gap ),
    TOKDEF( hatch_min_hole_area ),
    TOKDEF( hatch_orientation ),
    TOKDEF( hatch_position ),
    TOKDEF( hatch_smoothing_level ),
    TOKDEF( hatch_smoothing_value ),
    TOKDEF( hatch_thickness ),
    TOKDEF( header ),
    TOKDEF( height ),
    TOKDEF( hide ),
    TOKDEF( hole_to_hole_min ),
    TOKDEF( host ),
    TOKDEF( href ),
    TOKDEF( id ),
    TOKDEF( image ),
    TOKDEF( inward ),
    TOKDEF( island ),
    TOKDEF( island_area_min ),
    TOKDEF( island_removal_mode ),
    TOKDEF( italic ),
    TOKDEF( jumper_pad_groups ),
    TOKDEF( junction ),
    TOKDEF( justify ),
    TOKDEF( keep_end_layers ),
    TOKDEF( keep_text_aligned ),
    TOKDEF( keep_upright ),
    TOKDEF( keepout ),
    TOKDEF( kicad_pcb ),
    TOKDEF( knockout ),
    TOKDEF( last_trace_width ),
    TOKDEF( layer ),
    TOKDEF( layers ),
    TOKDEF( leader ),
    TOKDEF( leader_length ),
    TOKDEF( left ),
    TOKDEF( legacy_teardrops ),
    TOKDEF( length_ratio ),
    TOKDEF( length_ratio_decimals ),
    TOKDEF( length_set ),
    TOKDEF( line_spacing ),
    TOKDEF( linear ),
    TOKDEF( links ),
    TOKDEF( locked ),
    TOKDEF( loss_tangent ),
    TOKDEF( margins ),
    TOKDEF( material ),
    TOKDEF( max_error ),
    TOKDEF( max_length ),
    TOKDEF( max_width ),
    TOKDEF( members ),
    TOKDEF( micro ),
    TOKDEF( mid ),
    TOKDEF( min_thickness ),
    TOKDEF( mirror ),
    TOKDEF( mod_edge_width ),
    TOKDEF( mod_text_size ),
    TOKDEF( mod_text_width ),
    TOKDEF( mode ),
    TOKDEF( model ),
    TOKDEF( module ),
    TOKDEF( name ),
    TOKDEF( net ),
    TOKDEF( net_class ),
    TOKDEF( net_name ),
    TOKDEF( net_tie_pad_groups ),
    TOKDEF( nets ),
    TOKDEF( no ),
    TOKDEF( no_connects ),
    TOKDEF( none ),
    TOKDEF( not_allowed ),
    TOKDEF( np_thru_hole ),
    TOKDEF( offset ),
    TOKDEF( opacity ),
    TOKDEF( options ),
    TOKDEF( orientation ),
    TOKDEF( orthogonal ),
    TOKDEF( other ),
    TOKDEF( other_layers_line_width ),
    TOKDEF( other_layers_text_dims ),
    TOKDEF( outline ),
    TOKDEF( outward ),
    TOKDEF( oval ),
    TOKDEF( override_value ),
    TOKDEF( pad ),
    TOKDEF( pad_drill ),
    TOKDEF( pad_prop_bga ),
    TOKDEF( pad_prop_castellated ),
    TOKDEF( pad_prop_fiducial_glob ),
    TOKDEF( pad_prop_fiducial_loc ),
    TOKDEF( pad_prop_heatsink ),
    TOKDEF( pad_prop_mechanical ),
    TOKDEF( pad_prop_testpoint ),
    TOKDEF( pad_size ),
    TOKDEF( pad_to_mask_clearance ),
    TOKDEF( pad_to_paste_clearance ),
    TOKDEF( pad_to_paste_clearance_ratio ),
    TOKDEF( pads ),
    TOKDEF( padstack ),
    TOKDEF( padvia ),
    TOKDEF( page ),
    TOKDEF( paper ),
    TOKDEF( parameters ),
    TOKDEF( path ),
    TOKDEF( pcb_text_size ),
    TOKDEF( pcb_text_width ),
    TOKDEF( pcbplotparams ),
    TOKDEF( pinfunction ),
    TOKDEF( pintype ),
    TOKDEF( placed ),
    TOKDEF( placement ),
    TOKDEF( plugging ),
    TOKDEF( plus ),
    TOKDEF( polygon ),
    TOKDEF( portrait ),
    TOKDEF( position ),
    TOKDEF( precision ),
    TOKDEF( prefer_zone_connections ),
    TOKDEF( prefix ),
    TOKDEF( primitives ),
    TOKDEF( priority ),
    TOKDEF( private_layers ),
    TOKDEF( property ),
    TOKDEF( pts ),
    TOKDEF( radial ),
    TOKDEF( radius ),
    TOKDEF( rect ),
    TOKDEF( rect_delta ),
    TOKDEF( reference ),
    TOKDEF( remove_unused_layers ),
    TOKDEF( render_cache ),
    TOKDEF( rev ),
    TOKDEF( reverse_hatch ),
    TOKDEF( right ),
    TOKDEF( rotate ),
    TOKDEF( roundedtrackscorner ),
    TOKDEF( roundrect ),
    TOKDEF( roundrect_rratio ),
    TOKDEF( row_heights ),
    TOKDEF( rows ),
    TOKDEF( scale ),
    TOKDEF( segment ),
    TOKDEF( segment_width ),
    TOKDEF( segments ),
    TOKDEF( separators ),
    TOKDEF( setup ),
    TOKDEF( shape ),
    TOKDEF( sheetfile ),
    TOKDEF( sheetname ),
    TOKDEF( silk_line_width ),
    TOKDEF( silk_text_dims ),
    TOKDEF( size ),
    TOKDEF( smd ),
    TOKDEF( smoothing ),
    TOKDEF( solder_mask_margin ),
    TOKDEF( solder_mask_min_width ),
    TOKDEF( solder_paste_margin ),
    TOKDEF( solder_paste_margin_ratio ),
    TOKDEF( solder_paste_ratio ),
    TOKDEF( solid ),
    TOKDEF( span ),
    TOKDEF( stackup ),
    TOKDEF( start ),
    TOKDEF( status ),
    TOKDEF( stroke ),
    TOKDEF( style ),
    TOKDEF( suffix ),
    TOKDEF( suppress_zeroes ),
    TOKDEF( table ),
    TOKDEF( table_cell ),
    TOKDEF( tags ),
    TOKDEF( target ),
    TOKDEF( teardrop ),
    TOKDEF( teardrops ),
    TOKDEF( tedit ),
    TOKDEF( tenting ),
    TOKDEF( text_frame ),
    TOKDEF( text_position_mode ),
    TOKDEF( thermal_bridge_angle ),
    TOKDEF( thermal_bridge_width ),
    TOKDEF( thermal_gap ),
    TOKDEF( thermal_width ),
    TOKDEF( thickness ),
    TOKDEF( through_hole ),
    TOKDEF( through_hole_min ),
    TOKDEF( thru ),
    TOKDEF( thru_hole ),
    TOKDEF( thru_hole_only ),
    TOKDEF( title ),
    TOKDEF( title_block ),
    TOKDEF( top ),
    TOKDEF( top_left ),
    TOKDEF( top_right ),
    TOKDEF( trace_clearance ),
    TOKDEF( trace_min ),
    TOKDEF( trace_width ),
    TOKDEF( track_end ),
    TOKDEF( tracks ),
    TOKDEF( trapezoid ),
    TOKDEF( true ),
    TOKDEF( tstamp ),
    TOKDEF( type ),
    TOKDEF( units ),
    TOKDEF( units_format ),
    TOKDEF( unlocked ),
    TOKDEF( user ),
    TOKDEF( user_diff_pair ),
    TOKDEF( user_trace_width ),
    TOKDEF( user_via ),
    TOKDEF( uuid ),
    TOKDEF( uvia_dia ),
    TOKDEF( uvia_drill ),
    TOKDEF( uvia_min_drill ),
    TOKDEF( uvia_min_size ),
    TOKDEF( uvia_size ),
    TOKDEF( uvias_allowed ),
    TOKDEF( value ),
    TOKDEF( version ),
    TOKDEF( via ),
    TOKDEF( via_dia ),
    TOKDEF( via_drill ),
    TOKDEF( via_min_annulus ),
    TOKDEF( via_min_drill ),
    TOKDEF( via_min_size ),
    TOKDEF( via_size ),
    TOKDEF( vias ),
    TOKDEF( virtual ),
    TOKDEF( visible_elements ),
    TOKDEF( width ),
    TOKDEF( width_ratio ),
    TOKDEF( worksheet ),
    TOKDEF( x ),
    TOKDEF( xy ),
    TOKDEF( xyz ),
    TOKDEF( yes ),
    TOKDEF( zone ),
    TOKDEF( zone_45_only ),
    TOKDEF( zone_clearance ),
    TOKDEF( zone_connect ),
    TOKDEF( zone_defaults ),
    TOKDEF( zone_layer_connections ),
    TOKDEF( zone_type ),
    TOKDEF( zones )
};

const unsigned PCB_LEXER::keyword_count = unsigned( sizeof( PCB_LEXER::keywords )/sizeof( PCB_LEXER::keywords[0] ) );


const char* PCB_LEXER::TokenName( T aTok )
{
    const char* ret;

    if( aTok < 0 )
        ret = DSNLEXER::Syntax( aTok );
    else if( (unsigned) aTok < keyword_count )
        ret = keywords[aTok].name;
    else
        ret = "token too big";

    return ret;
}


const KEYWORD_MAP PCB_LEXER::keywords_hash({
    { "add_net", 0 },
    { "addsublayer", 1 },
    { "aligned", 2 },
    { "allow_missing_courtyard", 3 },
    { "allow_soldermask_bridges", 4 },
    { "allow_soldermask_bridges_in_footprints", 5 },
    { "allow_two_segments", 6 },
    { "allowed", 7 },
    { "anchor", 8 },
    { "angle", 9 },
    { "arc", 10 },
    { "arc_segments", 11 },
    { "area", 12 },
    { "arrow1a", 13 },
    { "arrow1b", 14 },
    { "arrow2a", 15 },
    { "arrow2b", 16 },
    { "arrow_direction", 17 },
    { "arrow_length", 18 },
    { "at", 19 },
    { "attr", 20 },
    { "autoplace_cost180", 21 },
    { "autoplace_cost90", 22 },
    { "aux_axis_origin", 23 },
    { "back", 24 },
    { "best_length_ratio", 25 },
    { "best_width_ratio", 26 },
    { "bevelled", 27 },
    { "blind", 28 },
    { "blind_buried_vias_allowed", 29 },
    { "board_only", 30 },
    { "bold", 31 },
    { "border", 32 },
    { "bottom", 33 },
    { "bottom_left", 34 },
    { "bottom_right", 35 },
    { "capping", 36 },
    { "castellated_pads", 37 },
    { "cells", 38 },
    { "center", 39 },
    { "chamfer", 40 },
    { "chamfer_ratio", 41 },
    { "checksum", 42 },
    { "circle", 43 },
    { "class", 44 },
    { "clearance", 45 },
    { "clearance_min", 46 },
    { "color", 47 },
    { "cols", 48 },
    { "column_count", 49 },
    { "column_widths", 50 },
    { "comment", 51 },
    { "company", 52 },
    { "component_class", 53 },
    { "component_classes", 54 },
    { "connect", 55 },
    { "connect_pads", 56 },
    { "convexhull", 57 },
    { "copper_finish", 58 },
    { "copper_line_width", 59 },
    { "copper_text_dims", 60 },
    { "copperpour", 61 },
    { "courtyard_line_width", 62 },
    { "covering", 63 },
    { "creepage", 64 },
    { "cross_hatch", 65 },
    { "crossbar", 66 },
    { "curve_points", 67 },
    { "curved_edges", 68 },
    { "custom", 69 },
    { "dash", 70 },
    { "dash_dot", 71 },
    { "dash_dot_dot", 72 },
    { "data", 73 },
    { "datasheet", 74 },
    { "date", 75 },
    { "default", 76 },
    { "defaults", 77 },
    { "descr", 78 },
    { "die_length", 79 },
    { "dielectric_constraints", 80 },
    { "diff_pair_gap", 81 },
    { "diff_pair_width", 82 },
    { "dimension", 83 },
    { "dimension_precision", 84 },
    { "dimension_units", 85 },
    { "dnp", 86 },
    { "dot", 87 },
    { "drawings", 88 },
    { "drill", 89 },
    { "duplicate_pad_numbers_are_jumpers", 90 },
    { "edge", 91 },
    { "edge_clearance", 92 },
    { "edge_connector", 93 },
    { "edge_cuts_line_width", 94 },
    { "edge_plating", 95 },
    { "edge_width", 96 },
    { "effects", 97 },
    { "embedded_files", 98 },
    { "embedded_fonts", 99 },
    { "enabled", 100 },
    { "end", 101 },
    { "epsilon_r", 102 },
    { "exclude_from_bom", 103 },
    { "exclude_from_pos_files", 104 },
    { "extension_height", 105 },
    { "extension_offset", 106 },
    { "external", 107 },
    { "fab_layers_line_width", 108 },
    { "fab_layers_text_dims", 109 },
    { "face", 110 },
    { "false", 111 },
    { "feature1", 112 },
    { "feature2", 113 },
    { "file", 114 },
    { "fill", 115 },
    { "fill_segments", 116 },
    { "filled_areas_thickness", 117 },
    { "filled_polygon", 118 },
    { "fillet", 119 },
    { "fillet_auto", 120 },
    { "fillet_left", 121 },
    { "fillet_right", 122 },
    { "filling", 123 },
    { "filter_ratio", 124 },
    { "font", 125 },
    { "footprint", 126 },
    { "footprints", 127 },
    { "format", 128 },
    { "fp_arc", 129 },
    { "fp_circle", 130 },
    { "fp_curve", 131 },
    { "fp_line", 132 },
    { "fp_poly", 133 },
    { "fp_rect", 134 },
    { "fp_text", 135 },
    { "fp_text_box", 136 },
    { "free", 137 },
    { "front", 138 },
    { "front_inner_back", 139 },
    { "full", 140 },
    { "general", 141 },
    { "generated", 142 },
    { "generator", 143 },
    { "generator_version", 144 },
    { "gr_arc", 145 },
    { "gr_bbox", 146 },
    { "gr_circle", 147 },
    { "gr_curve", 148 },
    { "gr_line", 149 },
    { "gr_poly", 150 },
    { "gr_rect", 151 },
    { "gr_text", 152 },
    { "gr_text_box", 153 },
    { "gr_vector", 154 },
    { "grid_origin", 155 },
    { "group", 156 },
    { "hatch", 157 },
    { "hatch_border_algorithm", 158 },
    { "hatch_gap", 159 },
    { "hatch_min_hole_area", 160 },
    { "hatch_orientation", 161 },
    { "hatch_position", 162 },
    { "hatch_smoothing_level", 163 },
    { "hatch_smoothing_value", 164 },
    { "hatch_thickness", 165 },
    { "header", 166 },
    { "height", 167 },
    { "hide", 168 },
    { "hole_to_hole_min", 169 },
    { "host", 170 },
    { "href", 171 },
    { "id", 172 },
    { "image", 173 },
    { "inward", 174 },
    { "island", 175 },
    { "island_area_min", 176 },
    { "island_removal_mode", 177 },
    { "italic", 178 },
    { "jumper_pad_groups", 179 },
    { "junction", 180 },
    { "justify", 181 },
    { "keep_end_layers", 182 },
    { "keep_text_aligned", 183 },
    { "keep_upright", 184 },
    { "keepout", 185 },
    { "kicad_pcb", 186 },
    { "knockout", 187 },
    { "last_trace_width", 188 },
    { "layer", 189 },
    { "layers", 190 },
    { "leader", 191 },
    { "leader_length", 192 },
    { "left", 193 },
    { "legacy_teardrops", 194 },
    { "length_ratio", 195 },
    { "length_ratio_decimals", 196 },
    { "length_set", 197 },
    { "line_spacing", 198 },
    { "linear", 199 },
    { "links", 200 },
    { "locked", 201 },
    { "loss_tangent", 202 },
    { "margins", 203 },
    { "material", 204 },
    { "max_error", 205 },
    { "max_length", 206 },
    { "max_width", 207 },
    { "members", 208 },
    { "micro", 209 },
    { "mid", 210 },
    { "min_thickness", 211 },
    { "mirror", 212 },
    { "mod_edge_width", 213 },
    { "mod_text_size", 214 },
    { "mod_text_width", 215 },
    { "mode", 216 },
    { "model", 217 },
    { "module", 218 },
    { "name", 219 },
    { "net", 220 },
    { "net_class", 221 },
    { "net_name", 222 },
    { "net_tie_pad_groups", 223 },
    { "nets", 224 },
    { "no", 225 },
    { "no_connects", 226 },
    { "none", 227 },
    { "not_allowed", 228 },
    { "np_thru_hole", 229 },
    { "offset", 230 },
    { "opacity", 231 },
    { "options", 232 },
    { "orientation", 233 },
    { "orthogonal", 234 },
    { "other", 235 },
    { "other_layers_line_width", 236 },
    { "other_layers_text_dims", 237 },
    { "outline", 238 },
    { "outward", 239 },
    { "oval", 240 },
    { "override_value", 241 },
    { "pad", 242 },
    { "pad_drill", 243 },
    { "pad_prop_bga", 244 },
    { "pad_prop_castellated", 245 },
    { "pad_prop_fiducial_glob", 246 },
    { "pad_prop_fiducial_loc", 247 },
    { "pad_prop_heatsink", 248 },
    { "pad_prop_mechanical", 249 },
    { "pad_prop_testpoint", 250 },
    { "pad_size", 251 },
    { "pad_to_mask_clearance", 252 },
    { "pad_to_paste_clearance", 253 },
    { "pad_to_paste_clearance_ratio", 254 },
    { "pads", 255 },
    { "padstack", 256 },
    { "padvia", 257 },
    { "page", 258 },
    { "paper", 259 },
    { "parameters", 260 },
    { "path", 261 },
    { "pcb_text_size", 262 },
    { "pcb_text_width", 263 },
    { "pcbplotparams", 264 },
    { "pinfunction", 265 },
    { "pintype", 266 },
    { "placed", 267 },
    { "placement", 268 },
    { "plugging", 269 },
    { "plus", 270 },
    { "polygon", 271 },
    { "portrait", 272 },
    { "position", 273 },
    { "precision", 274 },
    { "prefer_zone_connections", 275 },
    { "prefix", 276 },
    { "primitives", 277 },
    { "priority", 278 },
    { "private_layers", 279 },
    { "property", 280 },
    { "pts", 281 },
    { "radial", 282 },
    { "radius", 283 },
    { "rect", 284 },
    { "rect_delta", 285 },
    { "reference", 286 },
    { "remove_unused_layers", 287 },
    { "render_cache", 288 },
    { "rev", 289 },
    { "reverse_hatch", 290 },
    { "right", 291 },
    { "rotate", 292 },
    { "roundedtrackscorner", 293 },
    { "roundrect", 294 },
    { "roundrect_rratio", 295 },
    { "row_heights", 296 },
    { "rows", 297 },
    { "scale", 298 },
    { "segment", 299 },
    { "segment_width", 300 },
    { "segments", 301 },
    { "separators", 302 },
    { "setup", 303 },
    { "shape", 304 },
    { "sheetfile", 305 },
    { "sheetname", 306 },
    { "silk_line_width", 307 },
    { "silk_text_dims", 308 },
    { "size", 309 },
    { "smd", 310 },
    { "smoothing", 311 },
    { "solder_mask_margin", 312 },
    { "solder_mask_min_width", 313 },
    { "solder_paste_margin", 314 },
    { "solder_paste_margin_ratio", 315 },
    { "solder_paste_ratio", 316 },
    { "solid", 317 },
    { "span", 318 },
    { "stackup", 319 },
    { "start", 320 },
    { "status", 321 },
    { "stroke", 322 },
    { "style", 323 },
    { "suffix", 324 },
    { "suppress_zeroes", 325 },
    { "table", 326 },
    { "table_cell", 327 },
    { "tags", 328 },
    { "target", 329 },
    { "teardrop", 330 },
    { "teardrops", 331 },
    { "tedit", 332 },
    { "tenting", 333 },
    { "text_frame", 334 },
    { "text_position_mode", 335 },
    { "thermal_bridge_angle", 336 },
    { "thermal_bridge_width", 337 },
    { "thermal_gap", 338 },
    { "thermal_width", 339 },
    { "thickness", 340 },
    { "through_hole", 341 },
    { "through_hole_min", 342 },
    { "thru", 343 },
    { "thru_hole", 344 },
    { "thru_hole_only", 345 },
    { "title", 346 },
    { "title_block", 347 },
    { "top", 348 },
    { "top_left", 349 },
    { "top_right", 350 },
    { "trace_clearance", 351 },
    { "trace_min", 352 },
    { "trace_width", 353 },
    { "track_end", 354 },
    { "tracks", 355 },
    { "trapezoid", 356 },
    { "true", 357 },
    { "tstamp", 358 },
    { "type", 359 },
    { "units", 360 },
    { "units_format", 361 },
    { "unlocked", 362 },
    { "user", 363 },
    { "user_diff_pair", 364 },
    { "user_trace_width", 365 },
    { "user_via", 366 },
    { "uuid", 367 },
    { "uvia_dia", 368 },
    { "uvia_drill", 369 },
    { "uvia_min_drill", 370 },
    { "uvia_min_size", 371 },
    { "uvia_size", 372 },
    { "uvias_allowed", 373 },
    { "value", 374 },
    { "version", 375 },
    { "via", 376 },
    { "via_dia", 377 },
    { "via_drill", 378 },
    { "via_min_annulus", 379 },
    { "via_min_drill", 380 },
    { "via_min_size", 381 },
    { "via_size", 382 },
    { "vias", 383 },
    { "virtual", 384 },
    { "visible_elements", 385 },
    { "width", 386 },
    { "width_ratio", 387 },
    { "worksheet", 388 },
    { "x", 389 },
    { "xy", 390 },
    { "xyz", 391 },
    { "yes", 392 },
    { "zone", 393 },
    { "zone_45_only", 394 },
    { "zone_clearance", 395 },
    { "zone_connect", 396 },
    { "zone_defaults", 397 },
    { "zone_layer_connections", 398 },
    { "zone_type", 399 },
    { "zones", 400 }
});