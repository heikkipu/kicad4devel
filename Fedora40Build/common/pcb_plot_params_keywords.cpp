
/* Do not modify this file it was automatically generated by the
 * TokenList2DsnLexer CMake script.
 *
 * Include this file in your lexer class to provide the keywords for
 * your DSN lexer.
 */

#include </opt/kicad/program/master/Tears_Master/build/common/pcb_plot_params_lexer.h>

using namespace PCBPLOTPARAMS_T;

#define TOKDEF(x)    { #x, T_##x }

const KEYWORD PCB_PLOT_PARAMS_LEXER::keywords[] = {
    TOKDEF( creategerberjobfile ),
    TOKDEF( crossoutdnponfab ),
    TOKDEF( dashed_line_dash_ratio ),
    TOKDEF( dashed_line_gap_ratio ),
    TOKDEF( disableapertmacros ),
    TOKDEF( drillshape ),
    TOKDEF( dxfimperialunits ),
    TOKDEF( dxfpolygonmode ),
    TOKDEF( dxfusepcbnewfont ),
    TOKDEF( excludeedgelayer ),
    TOKDEF( false ),
    TOKDEF( gerberprecision ),
    TOKDEF( hidednponfab ),
    TOKDEF( hpglpendiameter ),
    TOKDEF( hpglpennumber ),
    TOKDEF( hpglpenoverlay ),
    TOKDEF( hpglpenspeed ),
    TOKDEF( layerselection ),
    TOKDEF( linewidth ),
    TOKDEF( mirror ),
    TOKDEF( mode ),
    TOKDEF( no ),
    TOKDEF( outputdirectory ),
    TOKDEF( outputformat ),
    TOKDEF( pcbplotparams ),
    TOKDEF( pdf_back_fp_property_popups ),
    TOKDEF( pdf_front_fp_property_popups ),
    TOKDEF( pdf_metadata ),
    TOKDEF( pdf_single_document ),
    TOKDEF( plot_black_and_white ),
    TOKDEF( plot_on_all_layers_selection ),
    TOKDEF( plotfptext ),
    TOKDEF( plotframeref ),
    TOKDEF( plotinvisibletext ),
    TOKDEF( plotpadnumbers ),
    TOKDEF( plotreference ),
    TOKDEF( plotvalue ),
    TOKDEF( psa4output ),
    TOKDEF( pscolor ),
    TOKDEF( psnegative ),
    TOKDEF( scaleselection ),
    TOKDEF( sketchdnponfab ),
    TOKDEF( sketchpadsonfab ),
    TOKDEF( subtractmaskfromsilk ),
    TOKDEF( svgprecision ),
    TOKDEF( svguseinch ),
    TOKDEF( true ),
    TOKDEF( useauxorigin ),
    TOKDEF( usegerberadvancedattributes ),
    TOKDEF( usegerberattributes ),
    TOKDEF( usegerberextensions ),
    TOKDEF( viasonmask ),
    TOKDEF( yes )
};

const unsigned PCB_PLOT_PARAMS_LEXER::keyword_count = unsigned( sizeof( PCB_PLOT_PARAMS_LEXER::keywords )/sizeof( PCB_PLOT_PARAMS_LEXER::keywords[0] ) );


const char* PCB_PLOT_PARAMS_LEXER::TokenName( T aTok )
{
    const char* ret;

    if( aTok < 0 )
        ret = DSNLEXER::Syntax( aTok );
    else if( (unsigned) aTok < keyword_count )
        ret = keywords[aTok].name;
    else
        ret = "token too big";

    return ret;
}


const KEYWORD_MAP PCB_PLOT_PARAMS_LEXER::keywords_hash({
    { "creategerberjobfile", 0 },
    { "crossoutdnponfab", 1 },
    { "dashed_line_dash_ratio", 2 },
    { "dashed_line_gap_ratio", 3 },
    { "disableapertmacros", 4 },
    { "drillshape", 5 },
    { "dxfimperialunits", 6 },
    { "dxfpolygonmode", 7 },
    { "dxfusepcbnewfont", 8 },
    { "excludeedgelayer", 9 },
    { "false", 10 },
    { "gerberprecision", 11 },
    { "hidednponfab", 12 },
    { "hpglpendiameter", 13 },
    { "hpglpennumber", 14 },
    { "hpglpenoverlay", 15 },
    { "hpglpenspeed", 16 },
    { "layerselection", 17 },
    { "linewidth", 18 },
    { "mirror", 19 },
    { "mode", 20 },
    { "no", 21 },
    { "outputdirectory", 22 },
    { "outputformat", 23 },
    { "pcbplotparams", 24 },
    { "pdf_back_fp_property_popups", 25 },
    { "pdf_front_fp_property_popups", 26 },
    { "pdf_metadata", 27 },
    { "pdf_single_document", 28 },
    { "plot_black_and_white", 29 },
    { "plot_on_all_layers_selection", 30 },
    { "plotfptext", 31 },
    { "plotframeref", 32 },
    { "plotinvisibletext", 33 },
    { "plotpadnumbers", 34 },
    { "plotreference", 35 },
    { "plotvalue", 36 },
    { "psa4output", 37 },
    { "pscolor", 38 },
    { "psnegative", 39 },
    { "scaleselection", 40 },
    { "sketchdnponfab", 41 },
    { "sketchpadsonfab", 42 },
    { "subtractmaskfromsilk", 43 },
    { "svgprecision", 44 },
    { "svguseinch", 45 },
    { "true", 46 },
    { "useauxorigin", 47 },
    { "usegerberadvancedattributes", 48 },
    { "usegerberattributes", 49 },
    { "usegerberextensions", 50 },
    { "viasonmask", 51 },
    { "yes", 52 }
});