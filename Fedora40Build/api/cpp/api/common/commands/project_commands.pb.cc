// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/commands/project_commands.proto

#include "common/commands/project_commands.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace kiapi {
namespace common {
namespace commands {
constexpr GetNetClasses::GetNetClasses(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct GetNetClassesDefaultTypeInternal {
  constexpr GetNetClassesDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetNetClassesDefaultTypeInternal() {}
  union {
    GetNetClasses _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetNetClassesDefaultTypeInternal _GetNetClasses_default_instance_;
constexpr NetClassesResponse::NetClassesResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : net_classes_(){}
struct NetClassesResponseDefaultTypeInternal {
  constexpr NetClassesResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NetClassesResponseDefaultTypeInternal() {}
  union {
    NetClassesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NetClassesResponseDefaultTypeInternal _NetClassesResponse_default_instance_;
constexpr SetNetClasses::SetNetClasses(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : net_classes_()
  , merge_mode_(0)
{}
struct SetNetClassesDefaultTypeInternal {
  constexpr SetNetClassesDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetNetClassesDefaultTypeInternal() {}
  union {
    SetNetClasses _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetNetClassesDefaultTypeInternal _SetNetClasses_default_instance_;
constexpr ExpandTextVariables::ExpandTextVariables(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : text_()
  , document_(nullptr){}
struct ExpandTextVariablesDefaultTypeInternal {
  constexpr ExpandTextVariablesDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ExpandTextVariablesDefaultTypeInternal() {}
  union {
    ExpandTextVariables _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ExpandTextVariablesDefaultTypeInternal _ExpandTextVariables_default_instance_;
constexpr ExpandTextVariablesResponse::ExpandTextVariablesResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : text_(){}
struct ExpandTextVariablesResponseDefaultTypeInternal {
  constexpr ExpandTextVariablesResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ExpandTextVariablesResponseDefaultTypeInternal() {}
  union {
    ExpandTextVariablesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ExpandTextVariablesResponseDefaultTypeInternal _ExpandTextVariablesResponse_default_instance_;
constexpr GetTextVariables::GetTextVariables(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : document_(nullptr){}
struct GetTextVariablesDefaultTypeInternal {
  constexpr GetTextVariablesDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetTextVariablesDefaultTypeInternal() {}
  union {
    GetTextVariables _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetTextVariablesDefaultTypeInternal _GetTextVariables_default_instance_;
constexpr SetTextVariables::SetTextVariables(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : document_(nullptr)
  , variables_(nullptr)
  , merge_mode_(0)
{}
struct SetTextVariablesDefaultTypeInternal {
  constexpr SetTextVariablesDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetTextVariablesDefaultTypeInternal() {}
  union {
    SetTextVariables _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetTextVariablesDefaultTypeInternal _SetTextVariables_default_instance_;
}  // namespace commands
}  // namespace common
}  // namespace kiapi
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_common_2fcommands_2fproject_5fcommands_2eproto[7];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_common_2fcommands_2fproject_5fcommands_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_common_2fcommands_2fproject_5fcommands_2eproto = nullptr;

const uint32_t TableStruct_common_2fcommands_2fproject_5fcommands_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kiapi::common::commands::GetNetClasses, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kiapi::common::commands::NetClassesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::kiapi::common::commands::NetClassesResponse, net_classes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kiapi::common::commands::SetNetClasses, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::kiapi::common::commands::SetNetClasses, net_classes_),
  PROTOBUF_FIELD_OFFSET(::kiapi::common::commands::SetNetClasses, merge_mode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kiapi::common::commands::ExpandTextVariables, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::kiapi::common::commands::ExpandTextVariables, document_),
  PROTOBUF_FIELD_OFFSET(::kiapi::common::commands::ExpandTextVariables, text_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kiapi::common::commands::ExpandTextVariablesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::kiapi::common::commands::ExpandTextVariablesResponse, text_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kiapi::common::commands::GetTextVariables, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::kiapi::common::commands::GetTextVariables, document_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kiapi::common::commands::SetTextVariables, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::kiapi::common::commands::SetTextVariables, document_),
  PROTOBUF_FIELD_OFFSET(::kiapi::common::commands::SetTextVariables, variables_),
  PROTOBUF_FIELD_OFFSET(::kiapi::common::commands::SetTextVariables, merge_mode_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::kiapi::common::commands::GetNetClasses)},
  { 6, -1, -1, sizeof(::kiapi::common::commands::NetClassesResponse)},
  { 13, -1, -1, sizeof(::kiapi::common::commands::SetNetClasses)},
  { 21, -1, -1, sizeof(::kiapi::common::commands::ExpandTextVariables)},
  { 29, -1, -1, sizeof(::kiapi::common::commands::ExpandTextVariablesResponse)},
  { 36, -1, -1, sizeof(::kiapi::common::commands::GetTextVariables)},
  { 43, -1, -1, sizeof(::kiapi::common::commands::SetTextVariables)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kiapi::common::commands::_GetNetClasses_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kiapi::common::commands::_NetClassesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kiapi::common::commands::_SetNetClasses_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kiapi::common::commands::_ExpandTextVariables_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kiapi::common::commands::_ExpandTextVariablesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kiapi::common::commands::_GetTextVariables_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kiapi::common::commands::_SetTextVariables_default_instance_),
};

const char descriptor_table_protodef_common_2fcommands_2fproject_5fcommands_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n&common/commands/project_commands.proto"
  "\022\025kiapi.common.commands\032\035common/types/ba"
  "se_types.proto\032#common/types/project_set"
  "tings.proto\"\017\n\rGetNetClasses\"I\n\022NetClass"
  "esResponse\0223\n\013net_classes\030\001 \003(\0132\036.kiapi."
  "common.project.NetClass\"z\n\rSetNetClasses"
  "\0223\n\013net_classes\030\001 \003(\0132\036.kiapi.common.pro"
  "ject.NetClass\0224\n\nmerge_mode\030\003 \001(\0162 .kiap"
  "i.common.types.MapMergeMode\"\\\n\023ExpandTex"
  "tVariables\0227\n\010document\030\001 \001(\0132%.kiapi.com"
  "mon.types.DocumentSpecifier\022\014\n\004text\030\002 \003("
  "\t\"+\n\033ExpandTextVariablesResponse\022\014\n\004text"
  "\030\001 \003(\t\"K\n\020GetTextVariables\0227\n\010document\030\001"
  " \001(\0132%.kiapi.common.types.DocumentSpecif"
  "ier\"\271\001\n\020SetTextVariables\0227\n\010document\030\001 \001"
  "(\0132%.kiapi.common.types.DocumentSpecifie"
  "r\0226\n\tvariables\030\002 \001(\0132#.kiapi.common.proj"
  "ect.TextVariables\0224\n\nmerge_mode\030\003 \001(\0162 ."
  "kiapi.common.types.MapMergeModeb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_common_2fcommands_2fproject_5fcommands_2eproto_deps[2] = {
  &::descriptor_table_common_2ftypes_2fbase_5ftypes_2eproto,
  &::descriptor_table_common_2ftypes_2fproject_5fsettings_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_common_2fcommands_2fproject_5fcommands_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_common_2fcommands_2fproject_5fcommands_2eproto = {
  false, false, 759, descriptor_table_protodef_common_2fcommands_2fproject_5fcommands_2eproto, "common/commands/project_commands.proto", 
  &descriptor_table_common_2fcommands_2fproject_5fcommands_2eproto_once, descriptor_table_common_2fcommands_2fproject_5fcommands_2eproto_deps, 2, 7,
  schemas, file_default_instances, TableStruct_common_2fcommands_2fproject_5fcommands_2eproto::offsets,
  file_level_metadata_common_2fcommands_2fproject_5fcommands_2eproto, file_level_enum_descriptors_common_2fcommands_2fproject_5fcommands_2eproto, file_level_service_descriptors_common_2fcommands_2fproject_5fcommands_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_common_2fcommands_2fproject_5fcommands_2eproto_getter() {
  return &descriptor_table_common_2fcommands_2fproject_5fcommands_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_common_2fcommands_2fproject_5fcommands_2eproto(&descriptor_table_common_2fcommands_2fproject_5fcommands_2eproto);
namespace kiapi {
namespace common {
namespace commands {

// ===================================================================

class GetNetClasses::_Internal {
 public:
};

GetNetClasses::GetNetClasses(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:kiapi.common.commands.GetNetClasses)
}
GetNetClasses::GetNetClasses(const GetNetClasses& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:kiapi.common.commands.GetNetClasses)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetNetClasses::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetNetClasses::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetNetClasses::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_common_2fcommands_2fproject_5fcommands_2eproto_getter, &descriptor_table_common_2fcommands_2fproject_5fcommands_2eproto_once,
      file_level_metadata_common_2fcommands_2fproject_5fcommands_2eproto[0]);
}

// ===================================================================

class NetClassesResponse::_Internal {
 public:
};

void NetClassesResponse::clear_net_classes() {
  net_classes_.Clear();
}
NetClassesResponse::NetClassesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  net_classes_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:kiapi.common.commands.NetClassesResponse)
}
NetClassesResponse::NetClassesResponse(const NetClassesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      net_classes_(from.net_classes_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:kiapi.common.commands.NetClassesResponse)
}

inline void NetClassesResponse::SharedCtor() {
}

NetClassesResponse::~NetClassesResponse() {
  // @@protoc_insertion_point(destructor:kiapi.common.commands.NetClassesResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void NetClassesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void NetClassesResponse::ArenaDtor(void* object) {
  NetClassesResponse* _this = reinterpret_cast< NetClassesResponse* >(object);
  (void)_this;
}
void NetClassesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NetClassesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NetClassesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kiapi.common.commands.NetClassesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  net_classes_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NetClassesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .kiapi.common.project.NetClass net_classes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_net_classes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NetClassesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kiapi.common.commands.NetClassesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .kiapi.common.project.NetClass net_classes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_net_classes_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_net_classes(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kiapi.common.commands.NetClassesResponse)
  return target;
}

size_t NetClassesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kiapi.common.commands.NetClassesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .kiapi.common.project.NetClass net_classes = 1;
  total_size += 1UL * this->_internal_net_classes_size();
  for (const auto& msg : this->net_classes_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NetClassesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NetClassesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NetClassesResponse::GetClassData() const { return &_class_data_; }

void NetClassesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NetClassesResponse *>(to)->MergeFrom(
      static_cast<const NetClassesResponse &>(from));
}


void NetClassesResponse::MergeFrom(const NetClassesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kiapi.common.commands.NetClassesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  net_classes_.MergeFrom(from.net_classes_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NetClassesResponse::CopyFrom(const NetClassesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kiapi.common.commands.NetClassesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetClassesResponse::IsInitialized() const {
  return true;
}

void NetClassesResponse::InternalSwap(NetClassesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  net_classes_.InternalSwap(&other->net_classes_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NetClassesResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_common_2fcommands_2fproject_5fcommands_2eproto_getter, &descriptor_table_common_2fcommands_2fproject_5fcommands_2eproto_once,
      file_level_metadata_common_2fcommands_2fproject_5fcommands_2eproto[1]);
}

// ===================================================================

class SetNetClasses::_Internal {
 public:
};

void SetNetClasses::clear_net_classes() {
  net_classes_.Clear();
}
SetNetClasses::SetNetClasses(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  net_classes_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:kiapi.common.commands.SetNetClasses)
}
SetNetClasses::SetNetClasses(const SetNetClasses& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      net_classes_(from.net_classes_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  merge_mode_ = from.merge_mode_;
  // @@protoc_insertion_point(copy_constructor:kiapi.common.commands.SetNetClasses)
}

inline void SetNetClasses::SharedCtor() {
merge_mode_ = 0;
}

SetNetClasses::~SetNetClasses() {
  // @@protoc_insertion_point(destructor:kiapi.common.commands.SetNetClasses)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SetNetClasses::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetNetClasses::ArenaDtor(void* object) {
  SetNetClasses* _this = reinterpret_cast< SetNetClasses* >(object);
  (void)_this;
}
void SetNetClasses::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetNetClasses::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetNetClasses::Clear() {
// @@protoc_insertion_point(message_clear_start:kiapi.common.commands.SetNetClasses)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  net_classes_.Clear();
  merge_mode_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetNetClasses::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .kiapi.common.project.NetClass net_classes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_net_classes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .kiapi.common.types.MapMergeMode merge_mode = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_merge_mode(static_cast<::kiapi::common::types::MapMergeMode>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetNetClasses::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kiapi.common.commands.SetNetClasses)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .kiapi.common.project.NetClass net_classes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_net_classes_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_net_classes(i), target, stream);
  }

  // .kiapi.common.types.MapMergeMode merge_mode = 3;
  if (this->_internal_merge_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_merge_mode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kiapi.common.commands.SetNetClasses)
  return target;
}

size_t SetNetClasses::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kiapi.common.commands.SetNetClasses)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .kiapi.common.project.NetClass net_classes = 1;
  total_size += 1UL * this->_internal_net_classes_size();
  for (const auto& msg : this->net_classes_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .kiapi.common.types.MapMergeMode merge_mode = 3;
  if (this->_internal_merge_mode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_merge_mode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetNetClasses::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SetNetClasses::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetNetClasses::GetClassData() const { return &_class_data_; }

void SetNetClasses::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SetNetClasses *>(to)->MergeFrom(
      static_cast<const SetNetClasses &>(from));
}


void SetNetClasses::MergeFrom(const SetNetClasses& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kiapi.common.commands.SetNetClasses)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  net_classes_.MergeFrom(from.net_classes_);
  if (from._internal_merge_mode() != 0) {
    _internal_set_merge_mode(from._internal_merge_mode());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetNetClasses::CopyFrom(const SetNetClasses& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kiapi.common.commands.SetNetClasses)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetNetClasses::IsInitialized() const {
  return true;
}

void SetNetClasses::InternalSwap(SetNetClasses* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  net_classes_.InternalSwap(&other->net_classes_);
  swap(merge_mode_, other->merge_mode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetNetClasses::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_common_2fcommands_2fproject_5fcommands_2eproto_getter, &descriptor_table_common_2fcommands_2fproject_5fcommands_2eproto_once,
      file_level_metadata_common_2fcommands_2fproject_5fcommands_2eproto[2]);
}

// ===================================================================

class ExpandTextVariables::_Internal {
 public:
  static const ::kiapi::common::types::DocumentSpecifier& document(const ExpandTextVariables* msg);
};

const ::kiapi::common::types::DocumentSpecifier&
ExpandTextVariables::_Internal::document(const ExpandTextVariables* msg) {
  return *msg->document_;
}
void ExpandTextVariables::clear_document() {
  if (GetArenaForAllocation() == nullptr && document_ != nullptr) {
    delete document_;
  }
  document_ = nullptr;
}
ExpandTextVariables::ExpandTextVariables(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  text_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:kiapi.common.commands.ExpandTextVariables)
}
ExpandTextVariables::ExpandTextVariables(const ExpandTextVariables& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      text_(from.text_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_document()) {
    document_ = new ::kiapi::common::types::DocumentSpecifier(*from.document_);
  } else {
    document_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:kiapi.common.commands.ExpandTextVariables)
}

inline void ExpandTextVariables::SharedCtor() {
document_ = nullptr;
}

ExpandTextVariables::~ExpandTextVariables() {
  // @@protoc_insertion_point(destructor:kiapi.common.commands.ExpandTextVariables)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ExpandTextVariables::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete document_;
}

void ExpandTextVariables::ArenaDtor(void* object) {
  ExpandTextVariables* _this = reinterpret_cast< ExpandTextVariables* >(object);
  (void)_this;
}
void ExpandTextVariables::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ExpandTextVariables::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ExpandTextVariables::Clear() {
// @@protoc_insertion_point(message_clear_start:kiapi.common.commands.ExpandTextVariables)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  text_.Clear();
  if (GetArenaForAllocation() == nullptr && document_ != nullptr) {
    delete document_;
  }
  document_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExpandTextVariables::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .kiapi.common.types.DocumentSpecifier document = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_document(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string text = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_text();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kiapi.common.commands.ExpandTextVariables.text"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ExpandTextVariables::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kiapi.common.commands.ExpandTextVariables)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .kiapi.common.types.DocumentSpecifier document = 1;
  if (this->_internal_has_document()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::document(this), target, stream);
  }

  // repeated string text = 2;
  for (int i = 0, n = this->_internal_text_size(); i < n; i++) {
    const auto& s = this->_internal_text(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kiapi.common.commands.ExpandTextVariables.text");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kiapi.common.commands.ExpandTextVariables)
  return target;
}

size_t ExpandTextVariables::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kiapi.common.commands.ExpandTextVariables)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string text = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(text_.size());
  for (int i = 0, n = text_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      text_.Get(i));
  }

  // .kiapi.common.types.DocumentSpecifier document = 1;
  if (this->_internal_has_document()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *document_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ExpandTextVariables::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ExpandTextVariables::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ExpandTextVariables::GetClassData() const { return &_class_data_; }

void ExpandTextVariables::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ExpandTextVariables *>(to)->MergeFrom(
      static_cast<const ExpandTextVariables &>(from));
}


void ExpandTextVariables::MergeFrom(const ExpandTextVariables& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kiapi.common.commands.ExpandTextVariables)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  text_.MergeFrom(from.text_);
  if (from._internal_has_document()) {
    _internal_mutable_document()->::kiapi::common::types::DocumentSpecifier::MergeFrom(from._internal_document());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ExpandTextVariables::CopyFrom(const ExpandTextVariables& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kiapi.common.commands.ExpandTextVariables)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExpandTextVariables::IsInitialized() const {
  return true;
}

void ExpandTextVariables::InternalSwap(ExpandTextVariables* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  text_.InternalSwap(&other->text_);
  swap(document_, other->document_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ExpandTextVariables::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_common_2fcommands_2fproject_5fcommands_2eproto_getter, &descriptor_table_common_2fcommands_2fproject_5fcommands_2eproto_once,
      file_level_metadata_common_2fcommands_2fproject_5fcommands_2eproto[3]);
}

// ===================================================================

class ExpandTextVariablesResponse::_Internal {
 public:
};

ExpandTextVariablesResponse::ExpandTextVariablesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  text_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:kiapi.common.commands.ExpandTextVariablesResponse)
}
ExpandTextVariablesResponse::ExpandTextVariablesResponse(const ExpandTextVariablesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      text_(from.text_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:kiapi.common.commands.ExpandTextVariablesResponse)
}

inline void ExpandTextVariablesResponse::SharedCtor() {
}

ExpandTextVariablesResponse::~ExpandTextVariablesResponse() {
  // @@protoc_insertion_point(destructor:kiapi.common.commands.ExpandTextVariablesResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ExpandTextVariablesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ExpandTextVariablesResponse::ArenaDtor(void* object) {
  ExpandTextVariablesResponse* _this = reinterpret_cast< ExpandTextVariablesResponse* >(object);
  (void)_this;
}
void ExpandTextVariablesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ExpandTextVariablesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ExpandTextVariablesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kiapi.common.commands.ExpandTextVariablesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  text_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExpandTextVariablesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string text = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_text();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kiapi.common.commands.ExpandTextVariablesResponse.text"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ExpandTextVariablesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kiapi.common.commands.ExpandTextVariablesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string text = 1;
  for (int i = 0, n = this->_internal_text_size(); i < n; i++) {
    const auto& s = this->_internal_text(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kiapi.common.commands.ExpandTextVariablesResponse.text");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kiapi.common.commands.ExpandTextVariablesResponse)
  return target;
}

size_t ExpandTextVariablesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kiapi.common.commands.ExpandTextVariablesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string text = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(text_.size());
  for (int i = 0, n = text_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      text_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ExpandTextVariablesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ExpandTextVariablesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ExpandTextVariablesResponse::GetClassData() const { return &_class_data_; }

void ExpandTextVariablesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ExpandTextVariablesResponse *>(to)->MergeFrom(
      static_cast<const ExpandTextVariablesResponse &>(from));
}


void ExpandTextVariablesResponse::MergeFrom(const ExpandTextVariablesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kiapi.common.commands.ExpandTextVariablesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  text_.MergeFrom(from.text_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ExpandTextVariablesResponse::CopyFrom(const ExpandTextVariablesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kiapi.common.commands.ExpandTextVariablesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExpandTextVariablesResponse::IsInitialized() const {
  return true;
}

void ExpandTextVariablesResponse::InternalSwap(ExpandTextVariablesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  text_.InternalSwap(&other->text_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ExpandTextVariablesResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_common_2fcommands_2fproject_5fcommands_2eproto_getter, &descriptor_table_common_2fcommands_2fproject_5fcommands_2eproto_once,
      file_level_metadata_common_2fcommands_2fproject_5fcommands_2eproto[4]);
}

// ===================================================================

class GetTextVariables::_Internal {
 public:
  static const ::kiapi::common::types::DocumentSpecifier& document(const GetTextVariables* msg);
};

const ::kiapi::common::types::DocumentSpecifier&
GetTextVariables::_Internal::document(const GetTextVariables* msg) {
  return *msg->document_;
}
void GetTextVariables::clear_document() {
  if (GetArenaForAllocation() == nullptr && document_ != nullptr) {
    delete document_;
  }
  document_ = nullptr;
}
GetTextVariables::GetTextVariables(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:kiapi.common.commands.GetTextVariables)
}
GetTextVariables::GetTextVariables(const GetTextVariables& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_document()) {
    document_ = new ::kiapi::common::types::DocumentSpecifier(*from.document_);
  } else {
    document_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:kiapi.common.commands.GetTextVariables)
}

inline void GetTextVariables::SharedCtor() {
document_ = nullptr;
}

GetTextVariables::~GetTextVariables() {
  // @@protoc_insertion_point(destructor:kiapi.common.commands.GetTextVariables)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetTextVariables::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete document_;
}

void GetTextVariables::ArenaDtor(void* object) {
  GetTextVariables* _this = reinterpret_cast< GetTextVariables* >(object);
  (void)_this;
}
void GetTextVariables::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetTextVariables::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetTextVariables::Clear() {
// @@protoc_insertion_point(message_clear_start:kiapi.common.commands.GetTextVariables)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && document_ != nullptr) {
    delete document_;
  }
  document_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTextVariables::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .kiapi.common.types.DocumentSpecifier document = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_document(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetTextVariables::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kiapi.common.commands.GetTextVariables)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .kiapi.common.types.DocumentSpecifier document = 1;
  if (this->_internal_has_document()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::document(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kiapi.common.commands.GetTextVariables)
  return target;
}

size_t GetTextVariables::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kiapi.common.commands.GetTextVariables)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .kiapi.common.types.DocumentSpecifier document = 1;
  if (this->_internal_has_document()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *document_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetTextVariables::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetTextVariables::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetTextVariables::GetClassData() const { return &_class_data_; }

void GetTextVariables::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetTextVariables *>(to)->MergeFrom(
      static_cast<const GetTextVariables &>(from));
}


void GetTextVariables::MergeFrom(const GetTextVariables& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kiapi.common.commands.GetTextVariables)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_document()) {
    _internal_mutable_document()->::kiapi::common::types::DocumentSpecifier::MergeFrom(from._internal_document());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetTextVariables::CopyFrom(const GetTextVariables& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kiapi.common.commands.GetTextVariables)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTextVariables::IsInitialized() const {
  return true;
}

void GetTextVariables::InternalSwap(GetTextVariables* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(document_, other->document_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTextVariables::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_common_2fcommands_2fproject_5fcommands_2eproto_getter, &descriptor_table_common_2fcommands_2fproject_5fcommands_2eproto_once,
      file_level_metadata_common_2fcommands_2fproject_5fcommands_2eproto[5]);
}

// ===================================================================

class SetTextVariables::_Internal {
 public:
  static const ::kiapi::common::types::DocumentSpecifier& document(const SetTextVariables* msg);
  static const ::kiapi::common::project::TextVariables& variables(const SetTextVariables* msg);
};

const ::kiapi::common::types::DocumentSpecifier&
SetTextVariables::_Internal::document(const SetTextVariables* msg) {
  return *msg->document_;
}
const ::kiapi::common::project::TextVariables&
SetTextVariables::_Internal::variables(const SetTextVariables* msg) {
  return *msg->variables_;
}
void SetTextVariables::clear_document() {
  if (GetArenaForAllocation() == nullptr && document_ != nullptr) {
    delete document_;
  }
  document_ = nullptr;
}
void SetTextVariables::clear_variables() {
  if (GetArenaForAllocation() == nullptr && variables_ != nullptr) {
    delete variables_;
  }
  variables_ = nullptr;
}
SetTextVariables::SetTextVariables(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:kiapi.common.commands.SetTextVariables)
}
SetTextVariables::SetTextVariables(const SetTextVariables& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_document()) {
    document_ = new ::kiapi::common::types::DocumentSpecifier(*from.document_);
  } else {
    document_ = nullptr;
  }
  if (from._internal_has_variables()) {
    variables_ = new ::kiapi::common::project::TextVariables(*from.variables_);
  } else {
    variables_ = nullptr;
  }
  merge_mode_ = from.merge_mode_;
  // @@protoc_insertion_point(copy_constructor:kiapi.common.commands.SetTextVariables)
}

inline void SetTextVariables::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&document_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&merge_mode_) -
    reinterpret_cast<char*>(&document_)) + sizeof(merge_mode_));
}

SetTextVariables::~SetTextVariables() {
  // @@protoc_insertion_point(destructor:kiapi.common.commands.SetTextVariables)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SetTextVariables::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete document_;
  if (this != internal_default_instance()) delete variables_;
}

void SetTextVariables::ArenaDtor(void* object) {
  SetTextVariables* _this = reinterpret_cast< SetTextVariables* >(object);
  (void)_this;
}
void SetTextVariables::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetTextVariables::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetTextVariables::Clear() {
// @@protoc_insertion_point(message_clear_start:kiapi.common.commands.SetTextVariables)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && document_ != nullptr) {
    delete document_;
  }
  document_ = nullptr;
  if (GetArenaForAllocation() == nullptr && variables_ != nullptr) {
    delete variables_;
  }
  variables_ = nullptr;
  merge_mode_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetTextVariables::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .kiapi.common.types.DocumentSpecifier document = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_document(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .kiapi.common.project.TextVariables variables = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_variables(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .kiapi.common.types.MapMergeMode merge_mode = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_merge_mode(static_cast<::kiapi::common::types::MapMergeMode>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetTextVariables::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kiapi.common.commands.SetTextVariables)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .kiapi.common.types.DocumentSpecifier document = 1;
  if (this->_internal_has_document()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::document(this), target, stream);
  }

  // .kiapi.common.project.TextVariables variables = 2;
  if (this->_internal_has_variables()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::variables(this), target, stream);
  }

  // .kiapi.common.types.MapMergeMode merge_mode = 3;
  if (this->_internal_merge_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_merge_mode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kiapi.common.commands.SetTextVariables)
  return target;
}

size_t SetTextVariables::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kiapi.common.commands.SetTextVariables)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .kiapi.common.types.DocumentSpecifier document = 1;
  if (this->_internal_has_document()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *document_);
  }

  // .kiapi.common.project.TextVariables variables = 2;
  if (this->_internal_has_variables()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *variables_);
  }

  // .kiapi.common.types.MapMergeMode merge_mode = 3;
  if (this->_internal_merge_mode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_merge_mode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetTextVariables::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SetTextVariables::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetTextVariables::GetClassData() const { return &_class_data_; }

void SetTextVariables::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SetTextVariables *>(to)->MergeFrom(
      static_cast<const SetTextVariables &>(from));
}


void SetTextVariables::MergeFrom(const SetTextVariables& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kiapi.common.commands.SetTextVariables)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_document()) {
    _internal_mutable_document()->::kiapi::common::types::DocumentSpecifier::MergeFrom(from._internal_document());
  }
  if (from._internal_has_variables()) {
    _internal_mutable_variables()->::kiapi::common::project::TextVariables::MergeFrom(from._internal_variables());
  }
  if (from._internal_merge_mode() != 0) {
    _internal_set_merge_mode(from._internal_merge_mode());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetTextVariables::CopyFrom(const SetTextVariables& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kiapi.common.commands.SetTextVariables)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetTextVariables::IsInitialized() const {
  return true;
}

void SetTextVariables::InternalSwap(SetTextVariables* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetTextVariables, merge_mode_)
      + sizeof(SetTextVariables::merge_mode_)
      - PROTOBUF_FIELD_OFFSET(SetTextVariables, document_)>(
          reinterpret_cast<char*>(&document_),
          reinterpret_cast<char*>(&other->document_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetTextVariables::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_common_2fcommands_2fproject_5fcommands_2eproto_getter, &descriptor_table_common_2fcommands_2fproject_5fcommands_2eproto_once,
      file_level_metadata_common_2fcommands_2fproject_5fcommands_2eproto[6]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace commands
}  // namespace common
}  // namespace kiapi
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::kiapi::common::commands::GetNetClasses* Arena::CreateMaybeMessage< ::kiapi::common::commands::GetNetClasses >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kiapi::common::commands::GetNetClasses >(arena);
}
template<> PROTOBUF_NOINLINE ::kiapi::common::commands::NetClassesResponse* Arena::CreateMaybeMessage< ::kiapi::common::commands::NetClassesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kiapi::common::commands::NetClassesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::kiapi::common::commands::SetNetClasses* Arena::CreateMaybeMessage< ::kiapi::common::commands::SetNetClasses >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kiapi::common::commands::SetNetClasses >(arena);
}
template<> PROTOBUF_NOINLINE ::kiapi::common::commands::ExpandTextVariables* Arena::CreateMaybeMessage< ::kiapi::common::commands::ExpandTextVariables >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kiapi::common::commands::ExpandTextVariables >(arena);
}
template<> PROTOBUF_NOINLINE ::kiapi::common::commands::ExpandTextVariablesResponse* Arena::CreateMaybeMessage< ::kiapi::common::commands::ExpandTextVariablesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kiapi::common::commands::ExpandTextVariablesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::kiapi::common::commands::GetTextVariables* Arena::CreateMaybeMessage< ::kiapi::common::commands::GetTextVariables >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kiapi::common::commands::GetTextVariables >(arena);
}
template<> PROTOBUF_NOINLINE ::kiapi::common::commands::SetTextVariables* Arena::CreateMaybeMessage< ::kiapi::common::commands::SetTextVariables >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kiapi::common::commands::SetTextVariables >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
